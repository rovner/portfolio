import static java.nio.file.Files.copy
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING

plugins {
    id 'java'
    id 'io.freefair.lombok' version '6.4.1'
    id 'io.qameta.allure' version '2.9.6'
}

group 'io.rovner'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime.extendsFrom configurations.testImplementation
    aspectj
}

ext {
    cucumberVersion = '7.2.3'
    retrofitVersion = '2.9.0'
    allureVersion = '2.17.3'
    testContainersVersion = '1.16.3'
}

dependencies {
    aspectj 'org.aspectj:aspectjweaver:1.8.10'

    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation "io.qameta.allure:allure-cucumber7-jvm:${allureVersion}"
    testImplementation "io.qameta.allure:allure-java-commons:${allureVersion}"
    testImplementation "io.qameta.allure:allure-okhttp3:${allureVersion}"
    testImplementation "io.qameta.allure:allure-assertj:${allureVersion}"
    testImplementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-picocontainer:${cucumberVersion}"
    testImplementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    testImplementation "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    testImplementation 'org.assertj:assertj-core:3.22.0'
    testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
    testImplementation "org.testcontainers:selenium:${testContainersVersion}"
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.1.3'
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java/io/rovner/features')
            exclude '**/*.java'
        }
    }
}

task cucumber() {
    description = 'Runs cucumber specs'
    group = 'verification'
    dependsOn assemble, testClasses
    finalizedBy tasks.allureReport

    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            systemProperty "allure.results.directory", "build/allure-results"
            systemProperty "cucumber.filter.tags", System.getProperty("cucumber.filter.tags")
            jvmArgs += "-javaagent:${configurations.aspectj.singleFile}"
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'io.qameta.allure.cucumber7jvm.AllureCucumber7Jvm',
                    '--glue', 'io.rovner',
                    'src/test/java'
            ]
        }
    }
}

allure {
    version = allureVersion
}

tasks.allureReport.doFirst {
    file("${buildDir}/reports/allure-report").deleteDir()
}

afterEvaluate {
    def from = configurations.aspectj.singleFile.toPath()
    def to = buildDir.toPath().resolve('aspectj.jar')
    copy(from, to, REPLACE_EXISTING)
}